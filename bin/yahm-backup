#!/bin/bash
#
# Leonid Kogan <leon@leonsio.com>
# Yet Another Homematic Management 
#
# Backup & Restore script, create and remove backups form CCU2 container and CCU2 data
#


# Stop on Errors
set -e

# Hilfe Output
show_help ()
{
cat << EOF
YAHM Backup & Restore Script

Usage Example: 

./yahm-backup [FLAG] COMMAND
./yahm-backup -n mycccu backup_full

Flags:
-n          - LXC container name.
-f          - Force operation (no halt on errors).
-v          - Verbose output 
-d          - Backup/Restore file

Commands:
full_backup   - Create a full backup from the LXC container
full_restore  - Restore full backup from the LXC container
data_backup   - Backup CCU2 data/configuration
data_restore  - Restore CCU2 data/configuration
EOF
exit 1
}

PARAMETER="d:vfn:"
DATA_FILE=""

# Include laden
source /opt/YAHM/share/include.sh

mkdir -p ${YAHM_TMP}

full_backup()
{
    if [ `check_yahm_installed` -eq 0 ] && [ $IS_FORCE -ne 1 ]
    then
        die "ERROR: No container installed"
    fi

    if [ `check_yahm_name $LXCNAME` -eq 0 ] && [ $IS_FORCE -ne 1 ]
    then
        die "ERROR: Can not find $LXCNAME container"
    fi

    progress "Trying to stop ${LXCNAME} container"
    lxc-stop $QUIET -k -n ${LXCNAME}

    installed_version=`get_yahm_version ${LXCNAME}`

    progress "Creating new backup from ${LXCNAME} version ${installed_version}"

    backup_file_name="yahm_backup-${installed_version}.tgz"

    cd /var/lib/lxc

    tar $VERBOSE -czf ${YAHM_TMP}/${backup_file_name} ${LXCNAME}
    
    info "STATUS: Backup was successfully created: ${YAHM_TMP}/${backup_file_name}"
    info "Please start ${LXCNAME} container with 'sudo yahm-ctl -n ${LXCNAME} start' manually"
}

full_restore()
{
    if [ ! -f $DATA_FILE ]
    then
        die "ERROR: Restore file can not be found, please specify it with -d flag"
    fi

    info "Clean up TMP directory"
    rm -rf ${YAHM_TMP}/*

    progress "Extracting LXC backup"

    tar $VERBOSE -xzf $DATA_FILE -C ${YAHM_TMP}

    content=$(ls ${YAHM_TMP}) 

    count=0
    for file in $content
    do
        if [ $count -eq 1 ] ; then
            die "ERROR: This does not look like a YAHM backup"
        fi
        count=$((count+1))
    done

    if [ ! -f ${YAHM_TMP}/${content}/config ]
    then
        die "ERROR: Can not find lxc config file"
    else
        LXCNAME=$(cat ${YAHM_TMP}/${content}/config | grep lxc.utsname | cut -d " " -f 3 ) 
        LXC_ROOT=/var/lib/lxc/$LXCNAME
        LXC_ROOT_FS=/var/lib/lxc/$LXCNAME/root
    fi
    
    if [ -d ${LXC_ROOT} ] && [ $IS_FORCE -ne 1 ]
    then
        die "ERROR: ${LXC_ROOT} is already present, use -f for overwrite"
    else
        lxc-stop -k -n ${LXCNAME} || info "No running lxc instance found, continue"
        rm -rf ${LXC_ROOT}
    fi 

    progress "Moving backup to ${LXC_ROOT}"
    mv ${YAHM_TMP}/${content} ${LXC_ROOT}

    installed_version=`get_yahm_version ${LXCNAME}`
    
    info "Clean up"
    rm -rf ${YAHM_TMP}/*

    info "STATUS: YAHM version ${installed_version} was successfully restored"
    info "Please start ${LXCNAME} container with 'sudo yahm-ctl -n ${LXCNAME} start' manually"
}

data_backup()
{
    if [ `check_yahm_installed` -eq 0 ] && [ $IS_FORCE -ne 1 ]
    then
        die "ERROR: No container installed"
    fi

    if [ `check_yahm_name $LXCNAME` -eq 0 ] && [ $IS_FORCE -ne 1 ]
    then
        die "ERROR: Can not find $LXCNAME container"
    fi

    installed_version=`get_yahm_version ${LXCNAME}`

    info "Clean up TMP directory"
    rm -rf ${YAHM_TMP}/*
    
    echo "VERSION=${installed_version}" > ${YAHM_TMP}/firmware_version

#    progress "Trying to stop ${LXCNAME} container"
#    lxc-stop $QUIET -k -n ${LXCNAME}

    progress "Creating Backup from /usr/local folder"
    cd ${LXC_ROOT_FS}
    tar $VERBOSE -czf ${YAHM_TMP}/usr_local.tar.gz usr/local
#sign the stuff so ccu will also accept the backup file
    lxc-attach -n ${LXCNAME} -- crypttool -s -t 1 <${YAHM_TMP}/usr_local.tar.gz >${YAHM_TMP}/signature
    lxc-attach -n ${LXCNAME} -- crypttool -g -t 1 >${YAHM_TMP}/key_index

    progress "Creating Homematic backup file"
    timestamp=$(date +%s)
    cd ${YAHM_TMP}
#add signature and key_index
    tar $VERBOSE -cf ${YAHM_TMP}/homematic-ccu2-${timestamp}.sbk usr_local.tar.gz firmware_version key_index signature

    info "Clean up"

    rm -rf ${YAHM_TMP}/usr_local.tar.gz ${YAHM_TMP}/firmware_version ${YAHM_TMP}/key_index ${YAHM_TMP}/signature 

#if there is a -d file move the backup to this file
    if [ ! $DATA_FILE ] || [ "$DATA_FILE" = "" ]
    then
     info "STATUS: CCU2 Backup was successfully created: ${YAHM_TMP}/homematic-ccu2-${timestamp}.sbk"
    
    else

    if [[ -d $DATA_FILE ]]; then
    #if -d is path create my own name with day in it
	FILENAME="$DATA_FILE/homematic-ccu2_$(date +%d).sbk"
    else
    #else set FILENAME to -d Arg
	FILENAME=$DATA_FILE
    fi
    
      mv ${YAHM_TMP}/homematic-ccu2-${timestamp}.sbk $FILENAME
     info "STATUS: CCU2 Backup was successfully created: $FILENAME"


    fi
}

data_restore()
{
    if [ ! -f $DATA_FILE ] || [ "$DATA_FILE" = "" ]
    then
        die "ERROR: Restore file can not be found, please specify it with -d flag"
    fi

    if [ `check_yahm_name $LXCNAME` -eq 0 ] && [ $IS_FORCE -ne 1 ]
    then
        die "ERROR: Can not find $LXCNAME container"
    fi
    
    info "Clean up TMP directory"
    rm -rf ${YAHM_TMP}/*
    
    progress "Extracting CCU2 backup"
    
    tar $VERBOSE -xf $DATA_FILE -C ${YAHM_TMP}

    if [ ! -f ${YAHM_TMP}/usr_local.tar.gz ] || [ ! -f ${YAHM_TMP}/firmware_version ]
    then
        die "ERROR: This does not look like a CCU2 backup"
    fi

    installed_version=`get_yahm_version ${LXCNAME}`
    backup_version=$(cat ${YAHM_TMP}/firmware_version | cut -d'=' -f2 )

    progress "Backup is valid, trying to stop ${LXCNAME} container"
    lxc-stop $QUIET -k -n ${LXCNAME}

    info "WARNING: /usr/local folder with all settings inside ${LXCNAME} container will be removed. You have 5 seconds to cancel this operation..."
        countdown
    info "... to late ;)"

    rm -rf ${LXC_ROOT_FS}/usr/local

    progress "Extracting Backup Data"
    tar $VERBOSE -xzf ${YAHM_TMP}/usr_local.tar.gz -C ${LXC_ROOT_FS}

#    progress "Starting ${LXCNAME} container"
#    lxc-start -n ${LXCNAME} -d

    info "STATUS: Backup version ${backup_version} was successfully restored into ${LXCNAME} container version ${installed_version}"
    info "Please start ${LXCNAME} container with 'sudo yahm-ctl -n ${LXCNAME} start' manually"
}

if [[ $# != 1 ]]; then
    show_help
fi

for key in "$@"; do
    case $key in
        full_backup)
            full_backup
            shift
            break;
        ;;
        full_restore)
            full_restore
            shift
            break;
        ;;
        data_backup)
            data_backup
            shift
            break;
        ;;  
        data_restore)
            data_restore
            shift
            break;
        ;;
        *)
            show_help
            exit 0
        ;;
    esac
done

